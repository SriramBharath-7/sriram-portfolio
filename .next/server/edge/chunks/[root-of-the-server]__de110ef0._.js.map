{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport type { NextRequest } from 'next/server';\r\n\r\n// Rate limiting configuration\r\nconst RATE_LIMIT_WINDOW = 60 * 1000; // 1 minute\r\nconst MAX_REQUESTS = 100; // Maximum requests per window\r\n\r\n// Store for rate limiting\r\nconst rateLimit = new Map();\r\n\r\n// Function to check rate limit\r\nfunction isRateLimited(ip: string): boolean {\r\n  const now = Date.now();\r\n  const windowStart = now - RATE_LIMIT_WINDOW;\r\n\r\n  // Clean up old entries\r\n  for (const [key, timestamp] of rateLimit.entries()) {\r\n    if (timestamp < windowStart) {\r\n      rateLimit.delete(key);\r\n    }\r\n  }\r\n\r\n  // Count requests for this IP\r\n  const requestCount = Array.from(rateLimit.entries())\r\n    .filter(([key, timestamp]) => key.startsWith(ip) && timestamp > windowStart)\r\n    .length;\r\n\r\n  // Add current request\r\n  rateLimit.set(`${ip}-${now}`, now);\r\n\r\n  return requestCount >= MAX_REQUESTS;\r\n}\r\n\r\nexport function middleware(request: NextRequest) {\r\n  const response = NextResponse.next();\r\n\r\n  // Get client IP from headers\r\n  const forwardedFor = request.headers.get('x-forwarded-for');\r\n  const ip = forwardedFor ? forwardedFor.split(',')[0] : 'unknown';\r\n\r\n  // Basic security headers\r\n  response.headers.set('X-Content-Type-Options', 'nosniff');\r\n  response.headers.set('X-Frame-Options', 'DENY');\r\n  response.headers.set('X-XSS-Protection', '1; mode=block');\r\n\r\n  // Rate limiting\r\n  if (isRateLimited(ip)) {\r\n    return new NextResponse('Too Many Requests', {\r\n      status: 429,\r\n      headers: {\r\n        'Retry-After': '60',\r\n        'Content-Type': 'text/plain',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Block potential malicious requests\r\n  const url = request.url.toLowerCase();\r\n  const userAgent = request.headers.get('user-agent')?.toLowerCase() || '';\r\n\r\n  // Block known malicious patterns\r\n  const maliciousPatterns = [\r\n    '/wp-admin',\r\n    '/wordpress',\r\n    '/wp-login',\r\n    'eval(',\r\n    '.php',\r\n    '.asp',\r\n    'union select',\r\n    'concat(',\r\n    '../',\r\n    './.',\r\n  ];\r\n\r\n  if (maliciousPatterns.some(pattern => url.includes(pattern))) {\r\n    return new NextResponse('Forbidden', { status: 403 });\r\n  }\r\n\r\n  // Block suspicious user agents\r\n  const suspiciousAgents = [\r\n    'sqlmap',\r\n    'nikto',\r\n    'nmap',\r\n    'masscan',\r\n    'wget/',\r\n    'curl/',\r\n    'python-requests',\r\n  ];\r\n\r\n  if (suspiciousAgents.some(agent => userAgent.includes(agent))) {\r\n    return new NextResponse('Forbidden', { status: 403 });\r\n  }\r\n\r\n  // Add security timestamp to detect replay attacks\r\n  const timestamp = Date.now().toString();\r\n  const nonce = Math.random().toString(36).substring(7);\r\n  response.headers.set('X-Security-Timestamp', timestamp);\r\n  response.headers.set('X-Security-Nonce', nonce);\r\n\r\n  return response;\r\n}\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     */\r\n    '/((?!api|_next/static|_next/image|favicon.ico).*)',\r\n  ],\r\n}; "],"names":[],"mappings":";;;;AAAA;AAAA;;AAGA,8BAA8B;AAC9B,MAAM,oBAAoB,KAAK,MAAM,WAAW;AAChD,MAAM,eAAe,KAAK,8BAA8B;AAExD,0BAA0B;AAC1B,MAAM,YAAY,IAAI;AAEtB,+BAA+B;AAC/B,SAAS,cAAc,EAAU;IAC/B,MAAM,MAAM,KAAK,GAAG;IACpB,MAAM,cAAc,MAAM;IAE1B,uBAAuB;IACvB,KAAK,MAAM,CAAC,KAAK,UAAU,IAAI,UAAU,OAAO,GAAI;QAClD,IAAI,YAAY,aAAa;YAC3B,UAAU,MAAM,CAAC;QACnB;IACF;IAEA,6BAA6B;IAC7B,MAAM,eAAe,MAAM,IAAI,CAAC,UAAU,OAAO,IAC9C,MAAM,CAAC,CAAC,CAAC,KAAK,UAAU,GAAK,IAAI,UAAU,CAAC,OAAO,YAAY,aAC/D,MAAM;IAET,sBAAsB;IACtB,UAAU,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;IAE9B,OAAO,gBAAgB;AACzB;AAEO,SAAS,WAAW,OAAoB;IAC7C,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;IAElC,6BAA6B;IAC7B,MAAM,eAAe,QAAQ,OAAO,CAAC,GAAG,CAAC;IACzC,MAAM,KAAK,eAAe,aAAa,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG;IAEvD,yBAAyB;IACzB,SAAS,OAAO,CAAC,GAAG,CAAC,0BAA0B;IAC/C,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;IACxC,SAAS,OAAO,CAAC,GAAG,CAAC,oBAAoB;IAEzC,gBAAgB;IAChB,IAAI,cAAc,KAAK;QACrB,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,qBAAqB;YAC3C,QAAQ;YACR,SAAS;gBACP,eAAe;gBACf,gBAAgB;YAClB;QACF;IACF;IAEA,qCAAqC;IACrC,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;IACnC,MAAM,YAAY,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe,iBAAiB;IAEtE,iCAAiC;IACjC,MAAM,oBAAoB;QACxB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,kBAAkB,IAAI,CAAC,CAAA,UAAW,IAAI,QAAQ,CAAC,WAAW;QAC5D,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,aAAa;YAAE,QAAQ;QAAI;IACrD;IAEA,+BAA+B;IAC/B,MAAM,mBAAmB;QACvB;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,iBAAiB,IAAI,CAAC,CAAA,QAAS,UAAU,QAAQ,CAAC,SAAS;QAC7D,OAAO,IAAI,6LAAA,CAAA,eAAY,CAAC,aAAa;YAAE,QAAQ;QAAI;IACrD;IAEA,kDAAkD;IAClD,MAAM,YAAY,KAAK,GAAG,GAAG,QAAQ;IACrC,MAAM,QAAQ,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC;IACnD,SAAS,OAAO,CAAC,GAAG,CAAC,wBAAwB;IAC7C,SAAS,OAAO,CAAC,GAAG,CAAC,oBAAoB;IAEzC,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"}}]
}